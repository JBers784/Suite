//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Suite.Models.Sisprod
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SisProdEntities : DbContext
    {
        public SisProdEntities()
            : base("name=SisProdEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        //public virtual DbSet<dtproperties> dtproperties { get; set; }
        public virtual DbSet<AfectTaller> AfectTaller { get; set; }
        public virtual DbSet<AfectUnidadesGeneradoras> AfectUnidadesGeneradoras { get; set; }
        public virtual DbSet<CentrosColectores> CentrosColectores { get; set; }
        public virtual DbSet<Choques> Choques { get; set; }
        public virtual DbSet<CodAfectAdmin> CodAfectAdmin { get; set; }
        public virtual DbSet<CodAfectCalderas> CodAfectCalderas { get; set; }
        public virtual DbSet<CodAfectCentrosMedicion> CodAfectCentrosMedicion { get; set; }
        public virtual DbSet<CodAfectEquipos> CodAfectEquipos { get; set; }
        public virtual DbSet<CodAfectGasometros> CodAfectGasometros { get; set; }
        public virtual DbSet<CodAfectGeneracion> CodAfectGeneracion { get; set; }
        public virtual DbSet<CodAfectPozos> CodAfectPozos { get; set; }
        public virtual DbSet<CodAfectPtoIny> CodAfectPtoIny { get; set; }
        public virtual DbSet<CodAfectPtoInyPozos> CodAfectPtoInyPozos { get; set; }
        public virtual DbSet<CodAfectTaller> CodAfectTaller { get; set; }
        public virtual DbSet<CodAreasPozos> CodAreasPozos { get; set; }
        public virtual DbSet<CodBloques> CodBloques { get; set; }
        public virtual DbSet<CodBuques> CodBuques { get; set; }
        public virtual DbSet<CodCalderas> CodCalderas { get; set; }
        public virtual DbSet<CodCategPozos> CodCategPozos { get; set; }
        public virtual DbSet<CodCausasLiq> CodCausasLiq { get; set; }
        public virtual DbSet<CodCentrosColectores> CodCentrosColectores { get; set; }
        public virtual DbSet<CodCentrosMedicion> CodCentrosMedicion { get; set; }
        public virtual DbSet<CodCias> CodCias { get; set; }
        public virtual DbSet<CodCiclosProd> CodCiclosProd { get; set; }
        public virtual DbSet<CodContratos> CodContratos { get; set; }
        public virtual DbSet<CodDestinos> CodDestinos { get; set; }
        public virtual DbSet<CodDinamografias> CodDinamografias { get; set; }
        public virtual DbSet<CodEquipos> CodEquipos { get; set; }
        public virtual DbSet<CodEstRebomb> CodEstRebomb { get; set; }
        public virtual DbSet<CodFlareYacim> CodFlareYacim { get; set; }
        public virtual DbSet<CodGasometros> CodGasometros { get; set; }
        public virtual DbSet<CodGrupoAfect> CodGrupoAfect { get; set; }
        public virtual DbSet<CodGruposNoAsociados> CodGruposNoAsociados { get; set; }
        public virtual DbSet<CodifMezclaSta> CodifMezclaSta { get; set; }
        public virtual DbSet<CodifSrv> CodifSrv { get; set; }
        public virtual DbSet<CodifSta> CodifSta { get; set; }
        public virtual DbSet<CodInstalaciones> CodInstalaciones { get; set; }
        public virtual DbSet<CodLugAfect> CodLugAfect { get; set; }
        public virtual DbSet<CodMetodosProd> CodMetodosProd { get; set; }
        public virtual DbSet<CodObservaciones> CodObservaciones { get; set; }
        public virtual DbSet<CodOperadores> CodOperadores { get; set; }
        public virtual DbSet<CodPailas> CodPailas { get; set; }
        public virtual DbSet<CodPozosIny> CodPozosIny { get; set; }
        public virtual DbSet<CodProdPlantasGas> CodProdPlantasGas { get; set; }
        public virtual DbSet<CodProductos> CodProductos { get; set; }
        public virtual DbSet<CodProductosGas> CodProductosGas { get; set; }
        public virtual DbSet<CodProvincias> CodProvincias { get; set; }
        public virtual DbSet<CodPtoMedGas> CodPtoMedGas { get; set; }
        public virtual DbSet<CodPtoSumSrv> CodPtoSumSrv { get; set; }
        public virtual DbSet<CodPtoSumSta> CodPtoSumSta { get; set; }
        public virtual DbSet<CodSrv> CodSrv { get; set; }
        public virtual DbSet<CodSta> CodSta { get; set; }
        public virtual DbSet<CodTanques> CodTanques { get; set; }
        public virtual DbSet<CodTanquesDiluente> CodTanquesDiluente { get; set; }
        public virtual DbSet<CodTipoAfectCald> CodTipoAfectCald { get; set; }
        public virtual DbSet<CodTipoDestinos> CodTipoDestinos { get; set; }
        public virtual DbSet<CodTipoEquipos> CodTipoEquipos { get; set; }
        public virtual DbSet<CodTipoInstalacion> CodTipoInstalacion { get; set; }
        public virtual DbSet<CodTipoPozos> CodTipoPozos { get; set; }
        public virtual DbSet<CodTipoProductos> CodTipoProductos { get; set; }
        public virtual DbSet<CodTiposContrato> CodTiposContrato { get; set; }
        public virtual DbSet<CodTipoTanques> CodTipoTanques { get; set; }
        public virtual DbSet<CodUnidades> CodUnidades { get; set; }
        public virtual DbSet<CodValvulasCorte> CodValvulasCorte { get; set; }
        public virtual DbSet<CodYacimGas> CodYacimGas { get; set; }
        public virtual DbSet<CodYacimientos> CodYacimientos { get; set; }
        public virtual DbSet<ConfigTrasiegoGas> ConfigTrasiegoGas { get; set; }
        public virtual DbSet<ConfigTrasiegosAguaI> ConfigTrasiegosAguaI { get; set; }
        public virtual DbSet<ConfigTrasiegosInstalac> ConfigTrasiegosInstalac { get; set; }
        public virtual DbSet<ConfigTrasiegosPozos> ConfigTrasiegosPozos { get; set; }
        public virtual DbSet<ConfigYacimGas> ConfigYacimGas { get; set; }
        public virtual DbSet<ContratosCias> ContratosCias { get; set; }
        public virtual DbSet<DatosEmpresa> DatosEmpresa { get; set; }
        public virtual DbSet<DatosFlareYacim> DatosFlareYacim { get; set; }
        public virtual DbSet<DatosGasNoAsociado> DatosGasNoAsociado { get; set; }
        public virtual DbSet<DatosLaboratorio> DatosLaboratorio { get; set; }
        public virtual DbSet<DatosPlantasGas> DatosPlantasGas { get; set; }
        public virtual DbSet<DatosRegimen> DatosRegimen { get; set; }
        public virtual DbSet<DatosUEB> DatosUEB { get; set; }
        public virtual DbSet<DatosUnidadesGeneradoras> DatosUnidadesGeneradoras { get; set; }
        public virtual DbSet<DiarioSTA> DiarioSTA { get; set; }
        public virtual DbSet<Energas> Energas { get; set; }
        public virtual DbSet<EstRebomb> EstRebomb { get; set; }
        public virtual DbSet<FluidosIny> FluidosIny { get; set; }
        public virtual DbSet<Gas_Afect> Gas_Afect { get; set; }
        public virtual DbSet<Gas_CodAfect> Gas_CodAfect { get; set; }
        public virtual DbSet<Gas_DatosProd> Gas_DatosProd { get; set; }
        public virtual DbSet<IndicCalidad> IndicCalidad { get; set; }
        public virtual DbSet<IndicCalidad_Contrato> IndicCalidad_Contrato { get; set; }
        public virtual DbSet<IndicCalidad_Usuarios> IndicCalidad_Usuarios { get; set; }
        public virtual DbSet<Inventarios> Inventarios { get; set; }
        public virtual DbSet<InvQf> InvQf { get; set; }
        public virtual DbSet<InvQg> InvQg { get; set; }
        public virtual DbSet<InyeccFluidos> InyeccFluidos { get; set; }
        public virtual DbSet<Inyectores> Inyectores { get; set; }
        public virtual DbSet<Niveles> Niveles { get; set; }
        public virtual DbSet<OperActuales> OperActuales { get; set; }
        public virtual DbSet<ParamSES> ParamSES { get; set; }
        public virtual DbSet<ParamTHD> ParamTHD { get; set; }
        public virtual DbSet<ParteDiario_Majagua> ParteDiario_Majagua { get; set; }
        public virtual DbSet<ParteDiarioCalderas> ParteDiarioCalderas { get; set; }
        public virtual DbSet<ParteDiarioEquipos> ParteDiarioEquipos { get; set; }
        public virtual DbSet<ParteDiarioGasom> ParteDiarioGasom { get; set; }
        public virtual DbSet<ParteDiarioPozos> ParteDiarioPozos { get; set; }
        public virtual DbSet<PlanAfectAdmin> PlanAfectAdmin { get; set; }
        public virtual DbSet<PlanAfectPozos> PlanAfectPozos { get; set; }
        public virtual DbSet<PlanDosificacion> PlanDosificacion { get; set; }
        public virtual DbSet<PlanIncPozos> PlanIncPozos { get; set; }
        public virtual DbSet<PlanProd> PlanProd { get; set; }
        public virtual DbSet<PlanProd_Majagua> PlanProd_Majagua { get; set; }
        public virtual DbSet<PlanProdPozos> PlanProdPozos { get; set; }
        public virtual DbSet<PlanSolventes> PlanSolventes { get; set; }
        public virtual DbSet<PlanVGas> PlanVGas { get; set; }
        public virtual DbSet<PlanVPet> PlanVPet { get; set; }
        public virtual DbSet<PozosContratos> PozosContratos { get; set; }
        public virtual DbSet<PozosCupetCias> PozosCupetCias { get; set; }
        public virtual DbSet<Presiones> Presiones { get; set; }
        public virtual DbSet<ProdBase> ProdBase { get; set; }
        public virtual DbSet<ProdPlantasGas> ProdPlantasGas { get; set; }
        public virtual DbSet<ProdPozos> ProdPozos { get; set; }
        public virtual DbSet<PtoInyAfect> PtoInyAfect { get; set; }
        public virtual DbSet<PtoInyAfectEquipos> PtoInyAfectEquipos { get; set; }
        public virtual DbSet<PtoInyAfectPozos> PtoInyAfectPozos { get; set; }
        public virtual DbSet<PtoInyParam> PtoInyParam { get; set; }
        public virtual DbSet<PtoInyPozos> PtoInyPozos { get; set; }
        public virtual DbSet<PtoInyTanques> PtoInyTanques { get; set; }
        public virtual DbSet<PtoInyTtEquipos> PtoInyTtEquipos { get; set; }
        public virtual DbSet<RecupGanancias> RecupGanancias { get; set; }
        public virtual DbSet<RolesApp> RolesApp { get; set; }
        public virtual DbSet<Srv> Srv { get; set; }
        public virtual DbSet<Srv_Diario> Srv_Diario { get; set; }
        public virtual DbSet<Sta> Sta { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Tanques> Tanques { get; set; }
        public virtual DbSet<TanquesDinam> TanquesDinam { get; set; }
        public virtual DbSet<TipoFluidosIny> TipoFluidosIny { get; set; }
        public virtual DbSet<TipoNiveles> TipoNiveles { get; set; }
        public virtual DbSet<TipoPresiones> TipoPresiones { get; set; }
        public virtual DbSet<TiposTrasiego> TiposTrasiego { get; set; }
        public virtual DbSet<TrasiegoOleoducto> TrasiegoOleoducto { get; set; }
        public virtual DbSet<TrasiegoPailas> TrasiegoPailas { get; set; }
        public virtual DbSet<TrasiegosAguaI> TrasiegosAguaI { get; set; }
        public virtual DbSet<TtCentrosMedicion> TtCentrosMedicion { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
        public virtual DbSet<UsuariosApp> UsuariosApp { get; set; }
        public virtual DbSet<VGasDulce> VGasDulce { get; set; }
        public virtual DbSet<VGasGasod> VGasGasod { get; set; }
        public virtual DbSet<VGasPozos> VGasPozos { get; set; }
        public virtual DbSet<AfectAdmin> AfectAdmin { get; set; }
        public virtual DbSet<AfectAdminMes> AfectAdminMes { get; set; }
        public virtual DbSet<AfectCalderas> AfectCalderas { get; set; }
        public virtual DbSet<AfectCalderasMes> AfectCalderasMes { get; set; }
        public virtual DbSet<AfectCentrosMedicion> AfectCentrosMedicion { get; set; }
        public virtual DbSet<AfectEquipos> AfectEquipos { get; set; }
        public virtual DbSet<AfectEquiposMes> AfectEquiposMes { get; set; }
        public virtual DbSet<AfectGasometros> AfectGasometros { get; set; }
        public virtual DbSet<AfectGasomMes> AfectGasomMes { get; set; }
        public virtual DbSet<AfectPozos> AfectPozos { get; set; }
        public virtual DbSet<AfectPozosMes> AfectPozosMes { get; set; }
        public virtual DbSet<App_Roles> App_Roles { get; set; }
        public virtual DbSet<App_Usuarios> App_Usuarios { get; set; }
        public virtual DbSet<App_UsuariosRoles> App_UsuariosRoles { get; set; }
        public virtual DbSet<BuquesTransito> BuquesTransito { get; set; }
        public virtual DbSet<CentrosColectoresMes> CentrosColectoresMes { get; set; }
        public virtual DbSet<CentrosColectoresYacim> CentrosColectoresYacim { get; set; }
        public virtual DbSet<cierremensualrecol> cierremensualrecol { get; set; }
        public virtual DbSet<cierresemanal> cierresemanal { get; set; }
        public virtual DbSet<CodPozosNoAsociados> CodPozosNoAsociados { get; set; }
        public virtual DbSet<ConsumoGasoil> ConsumoGasoil { get; set; }
        public virtual DbSet<datosbuqueterm> datosbuqueterm { get; set; }
        public virtual DbSet<DatosInteres> DatosInteres { get; set; }
        public virtual DbSet<DatosValvulasCorte> DatosValvulasCorte { get; set; }
        public virtual DbSet<desgafectadmin> desgafectadmin { get; set; }
        public virtual DbSet<desgafectgasom> desgafectgasom { get; set; }
        public virtual DbSet<desgafectpozos> desgafectpozos { get; set; }
        public virtual DbSet<desgcentroscolectores> desgcentroscolectores { get; set; }
        public virtual DbSet<desgdatospozos> desgdatospozos { get; set; }
        public virtual DbSet<desgestrebomb> desgestrebomb { get; set; }
        public virtual DbSet<DesgloseAfect> DesgloseAfect { get; set; }
        public virtual DbSet<desgprodpozos> desgprodpozos { get; set; }
        public virtual DbSet<desgsrv> desgsrv { get; set; }
        public virtual DbSet<desgsta> desgsta { get; set; }
        public virtual DbSet<desgttgasom> desgttgasom { get; set; }
        public virtual DbSet<desgvgas> desgvgas { get; set; }
        public virtual DbSet<desgvpet> desgvpet { get; set; }
        public virtual DbSet<existf> existf { get; set; }
        public virtual DbSet<Fecha> Fecha { get; set; }
        public virtual DbSet<firmas> firmas { get; set; }
        public virtual DbSet<FondoPozos> FondoPozos { get; set; }
        public virtual DbSet<FondoPozosMes> FondoPozosMes { get; set; }
        public virtual DbSet<FondoPozosYacim> FondoPozosYacim { get; set; }
        public virtual DbSet<histafectadmin> histafectadmin { get; set; }
        public virtual DbSet<histafectgasom> histafectgasom { get; set; }
        public virtual DbSet<histafectpozos> histafectpozos { get; set; }
        public virtual DbSet<histbsw> histbsw { get; set; }
        public virtual DbSet<histcentroscolectores> histcentroscolectores { get; set; }
        public virtual DbSet<histfondopozos> histfondopozos { get; set; }
        public virtual DbSet<histplanafec> histplanafec { get; set; }
        public virtual DbSet<histplanafecadmin> histplanafecadmin { get; set; }
        public virtual DbSet<histplancc> histplancc { get; set; }
        public virtual DbSet<histplaninc> histplaninc { get; set; }
        public virtual DbSet<histplanprod> histplanprod { get; set; }
        public virtual DbSet<histplanvgas> histplanvgas { get; set; }
        public virtual DbSet<histplanvpet> histplanvpet { get; set; }
        public virtual DbSet<histproddia> histproddia { get; set; }
        public virtual DbSet<histprodpozos> histprodpozos { get; set; }
        public virtual DbSet<histptc> histptc { get; set; }
        public virtual DbSet<histqf> histqf { get; set; }
        public virtual DbSet<histqg> histqg { get; set; }
        public virtual DbSet<histttgasom> histttgasom { get; set; }
        public virtual DbSet<histvgas> histvgas { get; set; }
        public virtual DbSet<histvpet> histvpet { get; set; }
        public virtual DbSet<IndicadoresCierre> IndicadoresCierre { get; set; }
        public virtual DbSet<IndicadoresCierre_Migue_> IndicadoresCierre_Migue_ { get; set; }
        public virtual DbSet<IndicCalculo> IndicCalculo { get; set; }
        public virtual DbSet<IndicCalculoCierre> IndicCalculoCierre { get; set; }
        public virtual DbSet<indicmtto> indicmtto { get; set; }
        public virtual DbSet<InsumosRecol> InsumosRecol { get; set; }
        public virtual DbSet<InvBsw> InvBsw { get; set; }
        public virtual DbSet<invptc> invptc { get; set; }
        public virtual DbSet<ParamInfMensual> ParamInfMensual { get; set; }
        public virtual DbSet<ParteDiarioCMed> ParteDiarioCMed { get; set; }
        public virtual DbSet<ParticipContratos> ParticipContratos { get; set; }
        public virtual DbSet<pdatospozos> pdatospozos { get; set; }
        public virtual DbSet<PlanEntGas> PlanEntGas { get; set; }
        public virtual DbSet<PlanIncrementos> PlanIncrementos { get; set; }
        public virtual DbSet<PlanProdCC> PlanProdCC { get; set; }
        public virtual DbSet<PlanSolvMezcla> PlanSolvMezcla { get; set; }
        public virtual DbSet<PozosA> PozosA { get; set; }
        public virtual DbSet<ProdDia> ProdDia { get; set; }
        public virtual DbSet<prodmens> prodmens { get; set; }
        public virtual DbSet<ProdPozosCierre> ProdPozosCierre { get; set; }
        public virtual DbSet<ProdPozosMes> ProdPozosMes { get; set; }
        public virtual DbSet<ProdPozosYacim> ProdPozosYacim { get; set; }
        public virtual DbSet<RegOperaciones> RegOperaciones { get; set; }
        public virtual DbSet<Resultados> Resultados { get; set; }
        public virtual DbSet<SIU> SIU { get; set; }
        public virtual DbSet<submayorcald> submayorcald { get; set; }
        public virtual DbSet<TabApiDensidad> TabApiDensidad { get; set; }
        public virtual DbSet<Tabla1> Tabla1 { get; set; }
        public virtual DbSet<Tabla2> Tabla2 { get; set; }
        public virtual DbSet<TanquesSolvente> TanquesSolvente { get; set; }
        public virtual DbSet<TareasPriorizadas> TareasPriorizadas { get; set; }
        public virtual DbSet<TrasiegoPozos> TrasiegoPozos { get; set; }
        public virtual DbSet<TtCalderas> TtCalderas { get; set; }
        public virtual DbSet<TtCalderasMes> TtCalderasMes { get; set; }
        public virtual DbSet<TtEquipos> TtEquipos { get; set; }
        public virtual DbSet<TtEquiposMes> TtEquiposMes { get; set; }
        public virtual DbSet<TtGasometros> TtGasometros { get; set; }
        public virtual DbSet<TtGasomMes> TtGasomMes { get; set; }
        public virtual DbSet<VGasMes> VGasMes { get; set; }
        public virtual DbSet<VPetBuques> VPetBuques { get; set; }
        public virtual DbSet<VPetInstalac> VPetInstalac { get; set; }
        public virtual DbSet<VPetMes> VPetMes { get; set; }
        public virtual DbSet<VPetPailas> VPetPailas { get; set; }
        public virtual DbSet<VPetPozos> VPetPozos { get; set; }
    
        [DbFunction("SisProdEntities", "PozosFondo_Datos")]
        public virtual IQueryable<PozosFondo_Datos_Result> PozosFondo_Datos(string periodo, Nullable<System.DateTime> fecha)
        {
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PozosFondo_Datos_Result>("[SisProdEntities].[PozosFondo_Datos](@Periodo, @Fecha)", periodoParameter, fechaParameter);
        }
    
        [DbFunction("SisProdEntities", "PozosFondo_Lista")]
        public virtual IQueryable<PozosFondo_Lista_Result> PozosFondo_Lista(string periodo, string ciclo, Nullable<System.DateTime> fecha)
        {
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            var cicloParameter = ciclo != null ?
                new ObjectParameter("Ciclo", ciclo) :
                new ObjectParameter("Ciclo", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PozosFondo_Lista_Result>("[SisProdEntities].[PozosFondo_Lista](@Periodo, @Ciclo, @Fecha)", periodoParameter, cicloParameter, fechaParameter);
        }
    
        public virtual int dt_addtosourcecontrol(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            var vchSourceSafeINIParameter = vchSourceSafeINI != null ?
                new ObjectParameter("vchSourceSafeINI", vchSourceSafeINI) :
                new ObjectParameter("vchSourceSafeINI", typeof(string));
    
            var vchProjectNameParameter = vchProjectName != null ?
                new ObjectParameter("vchProjectName", vchProjectName) :
                new ObjectParameter("vchProjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_addtosourcecontrol", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_addtosourcecontrol_u(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            var vchSourceSafeINIParameter = vchSourceSafeINI != null ?
                new ObjectParameter("vchSourceSafeINI", vchSourceSafeINI) :
                new ObjectParameter("vchSourceSafeINI", typeof(string));
    
            var vchProjectNameParameter = vchProjectName != null ?
                new ObjectParameter("vchProjectName", vchProjectName) :
                new ObjectParameter("vchProjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_addtosourcecontrol_u", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_adduserobject()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_adduserobject");
        }
    
        public virtual int dt_adduserobject_vcs(string vchProperty)
        {
            var vchPropertyParameter = vchProperty != null ?
                new ObjectParameter("vchProperty", vchProperty) :
                new ObjectParameter("vchProperty", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_adduserobject_vcs", vchPropertyParameter);
        }
    
        public virtual int dt_checkinobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            var txStream1Parameter = txStream1 != null ?
                new ObjectParameter("txStream1", txStream1) :
                new ObjectParameter("txStream1", typeof(string));
    
            var txStream2Parameter = txStream2 != null ?
                new ObjectParameter("txStream2", txStream2) :
                new ObjectParameter("txStream2", typeof(string));
    
            var txStream3Parameter = txStream3 != null ?
                new ObjectParameter("txStream3", txStream3) :
                new ObjectParameter("txStream3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkinobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter);
        }
    
        public virtual int dt_checkinobject_u(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            var txStream1Parameter = txStream1 != null ?
                new ObjectParameter("txStream1", txStream1) :
                new ObjectParameter("txStream1", typeof(string));
    
            var txStream2Parameter = txStream2 != null ?
                new ObjectParameter("txStream2", txStream2) :
                new ObjectParameter("txStream2", typeof(string));
    
            var txStream3Parameter = txStream3 != null ?
                new ObjectParameter("txStream3", txStream3) :
                new ObjectParameter("txStream3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkinobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter);
        }
    
        public virtual int dt_checkoutobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkoutobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter);
        }
    
        public virtual int dt_checkoutobject_u(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchCommentParameter = vchComment != null ?
                new ObjectParameter("vchComment", vchComment) :
                new ObjectParameter("vchComment", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iVCSFlagsParameter = iVCSFlags.HasValue ?
                new ObjectParameter("iVCSFlags", iVCSFlags) :
                new ObjectParameter("iVCSFlags", typeof(int));
    
            var iActionFlagParameter = iActionFlag.HasValue ?
                new ObjectParameter("iActionFlag", iActionFlag) :
                new ObjectParameter("iActionFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkoutobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter);
        }
    
        public virtual int dt_displayoaerror(Nullable<int> iObject, Nullable<int> iresult)
        {
            var iObjectParameter = iObject.HasValue ?
                new ObjectParameter("iObject", iObject) :
                new ObjectParameter("iObject", typeof(int));
    
            var iresultParameter = iresult.HasValue ?
                new ObjectParameter("iresult", iresult) :
                new ObjectParameter("iresult", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_displayoaerror", iObjectParameter, iresultParameter);
        }
    
        public virtual int dt_displayoaerror_u(Nullable<int> iObject, Nullable<int> iresult)
        {
            var iObjectParameter = iObject.HasValue ?
                new ObjectParameter("iObject", iObject) :
                new ObjectParameter("iObject", typeof(int));
    
            var iresultParameter = iresult.HasValue ?
                new ObjectParameter("iresult", iresult) :
                new ObjectParameter("iresult", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_displayoaerror_u", iObjectParameter, iresultParameter);
        }
    
        public virtual int dt_droppropertiesbyid(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_droppropertiesbyid", idParameter, propertyParameter);
        }
    
        public virtual int dt_dropuserobjectbyid(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_dropuserobjectbyid", idParameter);
        }
    
        public virtual int dt_generateansiname(ObjectParameter name)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_generateansiname", name);
        }
    
        public virtual ObjectResult<Nullable<int>> dt_getobjwithprop(string property, string value)
        {
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_getobjwithprop", propertyParameter, valueParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> dt_getobjwithprop_u(string property, string uvalue)
        {
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var uvalueParameter = uvalue != null ?
                new ObjectParameter("uvalue", uvalue) :
                new ObjectParameter("uvalue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_getobjwithprop_u", propertyParameter, uvalueParameter);
        }
    
        public virtual ObjectResult<dt_getpropertiesbyid_Result> dt_getpropertiesbyid(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dt_getpropertiesbyid_Result>("dt_getpropertiesbyid", idParameter, propertyParameter);
        }
    
        public virtual ObjectResult<dt_getpropertiesbyid_u_Result> dt_getpropertiesbyid_u(Nullable<int> id, string property)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dt_getpropertiesbyid_u_Result>("dt_getpropertiesbyid_u", idParameter, propertyParameter);
        }
    
        public virtual int dt_getpropertiesbyid_vcs(Nullable<int> id, string property, ObjectParameter value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs", idParameter, propertyParameter, value);
        }
    
        public virtual int dt_getpropertiesbyid_vcs_u(Nullable<int> id, string property, ObjectParameter value)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs_u", idParameter, propertyParameter, value);
        }
    
        public virtual int dt_isundersourcecontrol(string vchLoginName, string vchPassword, Nullable<int> iWhoToo)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iWhoTooParameter = iWhoToo.HasValue ?
                new ObjectParameter("iWhoToo", iWhoToo) :
                new ObjectParameter("iWhoToo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_isundersourcecontrol", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter);
        }
    
        public virtual int dt_isundersourcecontrol_u(string vchLoginName, string vchPassword, Nullable<int> iWhoToo)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            var iWhoTooParameter = iWhoToo.HasValue ?
                new ObjectParameter("iWhoToo", iWhoToo) :
                new ObjectParameter("iWhoToo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_isundersourcecontrol_u", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter);
        }
    
        public virtual int dt_removefromsourcecontrol()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_removefromsourcecontrol");
        }
    
        public virtual int dt_setpropertybyid(Nullable<int> id, string property, string value, byte[] lvalue)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var lvalueParameter = lvalue != null ?
                new ObjectParameter("lvalue", lvalue) :
                new ObjectParameter("lvalue", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_setpropertybyid", idParameter, propertyParameter, valueParameter, lvalueParameter);
        }
    
        public virtual int dt_setpropertybyid_u(Nullable<int> id, string property, string uvalue, byte[] lvalue)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("property", property) :
                new ObjectParameter("property", typeof(string));
    
            var uvalueParameter = uvalue != null ?
                new ObjectParameter("uvalue", uvalue) :
                new ObjectParameter("uvalue", typeof(string));
    
            var lvalueParameter = lvalue != null ?
                new ObjectParameter("lvalue", lvalue) :
                new ObjectParameter("lvalue", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_setpropertybyid_u", idParameter, propertyParameter, uvalueParameter, lvalueParameter);
        }
    
        public virtual int dt_validateloginparams(string vchLoginName, string vchPassword)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_validateloginparams", vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_validateloginparams_u(string vchLoginName, string vchPassword)
        {
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_validateloginparams_u", vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_vcsenabled()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_vcsenabled");
        }
    
        public virtual ObjectResult<Nullable<int>> dt_verstamp006()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_verstamp006");
        }
    
        public virtual ObjectResult<Nullable<int>> dt_verstamp007()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_verstamp007");
        }
    
        public virtual int dt_whocheckedout(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_whocheckedout", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int dt_whocheckedout_u(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            var chObjectTypeParameter = chObjectType != null ?
                new ObjectParameter("chObjectType", chObjectType) :
                new ObjectParameter("chObjectType", typeof(string));
    
            var vchObjectNameParameter = vchObjectName != null ?
                new ObjectParameter("vchObjectName", vchObjectName) :
                new ObjectParameter("vchObjectName", typeof(string));
    
            var vchLoginNameParameter = vchLoginName != null ?
                new ObjectParameter("vchLoginName", vchLoginName) :
                new ObjectParameter("vchLoginName", typeof(string));
    
            var vchPasswordParameter = vchPassword != null ?
                new ObjectParameter("vchPassword", vchPassword) :
                new ObjectParameter("vchPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_whocheckedout_u", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    }
}
